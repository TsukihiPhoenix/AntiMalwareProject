#include "mainwindow.h"
#include "ui_mainwindow.h"

MainWindow::MainWindow(QWidget *parent) :
    QMainWindow(parent),
    ui(new Ui::MainWindow)
{
    QWidget::setFixedSize(400,260);
    ui->setupUi(this);
    QWidget::setWindowTitle("AntiMalware Project");

    nbfound = 0;
    qDebug() << "Items detectable via DB :"+ QString::number(countdb());
    fetchdb(namefilter);
}

MainWindow::~MainWindow()
{
    delete ui;
}

void MainWindow::on_pushButton_scan_clicked()
{
    qDebug() << "on_pushButton_scan_clicked";
    QStringList FolderCheck;
    FolderCheck << "C:\\Program Files";
    for (int i = 0; i < FolderCheck.size(); ++i)
    {
        QDir directory(FolderCheck.at(i));
        if (directory.exists())
        {
            FindFolder(FolderCheck.at(i));
        }
        else
        {
            qDebug() << "Dossier nom présent";
        }
    }

    deleteitembox = new QCheckBox[nbfound];
    filter = new bool[nbfound];
    modal = new QStandardItemModel(nbfound,2,this);
    modal->setHeaderData(0, Qt::Horizontal, tr("Nom"));
    QModelIndex index;

    for(int i=0;i<nbfound;i++)
    {
        index = modal->index(i,0,QModelIndex());
        deleteitembox[i].setParent(this->ui->listView_detected);
        deleteitembox[i].setGeometry(ui->listView_detected->width()-30,1+(i*17),20,20);
        deleteitembox[i].setChecked(true);
        deleteitembox[i].show();
        filter[i] = true;

        modal->setData(index,txtFilesAndDirectories.at(i));

    }

    ui->listView_detected->setModel(modal);

    if(nbfound > 0)
    {
        ui->pushButton_clean->setEnabled(true);
    }
}

void MainWindow::on_pushButton_clean_clicked()
{
    qDebug() << "on_pushButton_clean_clicked";

    for(int i=0;i<nbfound;i++)
    {
        if(deleteitembox[i].isChecked())
        {
            qDebug() << "DELETING FILE n°"+QString::number(i);
            qDebug() << arbo.at(i);
            QFile::remove(arbo.at(i));
        }
    }

    delete modal;
    delete [] deleteitembox;

    QMessageBox::information(this,"Information","Les fichiers sélectionnés ont bien été supprimé !");
    exit(0);
}

void MainWindow::fetchdb(QStringList &tofill)
{
    QString req = "SELECT [file_name] FROM [malware]";

    QSqlQuery requeteur;
    requeteur.exec(req);

    while(requeteur.next())
    {
        tofill.append(requeteur.value(0).toString());
    }
}

int MainWindow::countdb()
{
    QString req = "SELECT COUNT(*) FROM [malware]";
    QSqlQuery requeteur;
    requeteur.exec(req);
    int ret = 0;

    while(requeteur.next())
    {
        ret = requeteur.value(0).toInt();
    }
    return ret;
}

void MainWindow::FindFolder(QString path)
{
    qDebug() << "Hello FindFolder";
    QDirIterator it(path, namefilter, QDir::Files, QDirIterator::Subdirectories);
    while (it.hasNext())
    {
        qDebug() << it.next();
        txtFilesAndDirectories << it.fileName();
        arbo << it.fileInfo().absoluteFilePath();
        nbfound++;
    }
}
